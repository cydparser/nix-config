# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [
    "ata_piix"
    "ohci_pci"
    "ahci"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/0a5530d0-e630-490a-bb9c-685522756dc4";
    fsType = "ext4";
  };

  fileSystems."/mnt/x" = {
    device = "/dev/disk/by-uuid/97e516e0-865f-4aca-bd8e-17250095c3d3";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-11983dfb-714f-4990-9656-6cc6315d88a9".device =
    "/dev/disk/by-uuid/11983dfb-714f-4990-9656-6cc6315d88a9";

  swapDevices = [
    { device = "/dev/disk/by-uuid/abc259e2-bbc7-4c61-9ba7-48b177f7c7b0"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  virtualisation.virtualbox.guest.enable = true;
}
